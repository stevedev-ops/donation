{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/green/medical-reminder-app/src/components/Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  useEffect(() => {\n    // Fetch data from local storage (dummy data here)\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Medical Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: reminder.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", reminder.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", reminder.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", reminder.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"Ywom95O85bhmIGDtbxAAvIW1S3U=\");\n_c = Reminders;\nconst cardStyle = {\n  margin: '10px',\n  padding: '15px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  width: '200px'\n};\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","savedReminders","JSON","parse","localStorage","getItem","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","reminder","index","cardStyle","title","date","time","description","_c","margin","border","borderRadius","width","$RefreshReg$"],"sources":["/home/steve/Development/code/green/medical-reminder-app/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Reminders = () => {\n  const [reminders, setReminders] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from local storage (dummy data here)\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Your Medical Reminders</h2>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {reminders.map((reminder, index) => (\n          <div key={index} style={cardStyle}>\n            <h3>{reminder.title}</h3>\n            <p>Date: {reminder.date}</p>\n            <p>Time: {reminder.time}</p>\n            <p>Description: {reminder.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst cardStyle = {\n  margin: '10px',\n  padding: '15px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  width: '200px'\n};\n\nexport default Reminders;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1EL,YAAY,CAACC,cAAc,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BZ,OAAA;MAAAY,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BhB,OAAA;MAAKU,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAN,QAAA,EAC/CT,SAAS,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BrB,OAAA;QAAiBU,KAAK,EAAEY,SAAU;QAAAV,QAAA,gBAChCZ,OAAA;UAAAY,QAAA,EAAKQ,QAAQ,CAACG;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBhB,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACQ,QAAQ,CAACI,IAAI;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BhB,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACQ,QAAQ,CAACK,IAAI;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BhB,OAAA;UAAAY,QAAA,GAAG,eAAa,EAACQ,QAAQ,CAACM,WAAW;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJlCK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA0Bf,MAAMqB,SAAS,GAAG;EAChBM,MAAM,EAAE,MAAM;EACdjB,OAAO,EAAE,MAAM;EACfkB,MAAM,EAAE,gBAAgB;EACxBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,eAAe9B,SAAS;AAAC,IAAA0B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}