{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst charitySlice = createSlice({\n  name: 'charity',\n  initialState: {\n    charities: [],\n    donors: [],\n    totalDonations: 0,\n    beneficiaries: [],\n    inventory: [],\n    stories: {} // Stories will now be an object where each charity has its own list of stories\n  },\n  reducers: {\n    setCharityDetails: (state, action) => {\n      state.charities.push(action.payload);\n    },\n    setDonors: (state, action) => {\n      state.donors = action.payload;\n    },\n    setTotalDonations: (state, action) => {\n      state.totalDonations = action.payload;\n    },\n    setInventory: (state, action) => {\n      state.inventory = action.payload;\n    },\n    addBeneficiary: (state, action) => {\n      const {\n        charityId,\n        name,\n        age\n      } = action.payload;\n      // Add the beneficiary to the correct charity\n      const charity = state.charities.find(charity => charity.id === charityId);\n      if (charity) {\n        if (!charity.beneficiaries) {\n          charity.beneficiaries = [];\n        }\n        charity.beneficiaries.push({\n          name,\n          age\n        });\n      }\n    },\n    addStory: (state, action) => {\n      const {\n        charityId,\n        title,\n        content\n      } = action.payload;\n      if (!state.stories[charityId]) {\n        state.stories[charityId] = [];\n      }\n      state.stories[charityId].push({\n        title,\n        content\n      });\n    }\n  }\n});\nexport const {\n  setCharityDetails,\n  setDonors,\n  setTotalDonations,\n  setInventory,\n  addBeneficiary,\n  addStory\n} = charitySlice.actions;\nexport default charitySlice.reducer;","map":{"version":3,"names":["createSlice","charitySlice","name","initialState","charities","donors","totalDonations","beneficiaries","inventory","stories","reducers","setCharityDetails","state","action","push","payload","setDonors","setTotalDonations","setInventory","addBeneficiary","charityId","age","charity","find","id","addStory","title","content","actions","reducer"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/redux/charitySlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst charitySlice = createSlice({\n  name: 'charity',\n  initialState: {\n    charities: [],\n    donors: [],\n    totalDonations: 0,\n    beneficiaries: [],\n    inventory: [],\n    stories: {},  // Stories will now be an object where each charity has its own list of stories\n  },\n  reducers: {\n    setCharityDetails: (state, action) => {\n      state.charities.push(action.payload);\n    },\n    setDonors: (state, action) => {\n      state.donors = action.payload;\n    },\n    setTotalDonations: (state, action) => {\n      state.totalDonations = action.payload;\n    },\n    setInventory: (state, action) => {\n      state.inventory = action.payload;\n    },\n    addBeneficiary: (state, action) => {\n      const { charityId, name, age } = action.payload;\n      // Add the beneficiary to the correct charity\n      const charity = state.charities.find(charity => charity.id === charityId);\n      if (charity) {\n        if (!charity.beneficiaries) {\n          charity.beneficiaries = [];\n        }\n        charity.beneficiaries.push({ name, age });\n      }\n    },\n    addStory: (state, action) => {\n      const { charityId, title, content } = action.payload;\n      if (!state.stories[charityId]) {\n        state.stories[charityId] = [];\n      }\n      state.stories[charityId].push({ title, content });\n    },\n  },\n});\n\nexport const {\n  setCharityDetails,\n  setDonors,\n  setTotalDonations,\n  setInventory,\n  addBeneficiary,\n  addStory,\n} = charitySlice.actions;\n\nexport default charitySlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,CAAC;IACjBC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,CAAC,CAAC,CAAG;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACR,SAAS,CAACU,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACtC,CAAC;IACDC,SAAS,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDE,iBAAiB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACE,OAAO;IACvC,CAAC;IACDG,YAAY,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,SAAS,GAAGK,MAAM,CAACE,OAAO;IAClC,CAAC;IACDI,cAAc,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEO,SAAS;QAAElB,IAAI;QAAEmB;MAAI,CAAC,GAAGR,MAAM,CAACE,OAAO;MAC/C;MACA,MAAMO,OAAO,GAAGV,KAAK,CAACR,SAAS,CAACmB,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,EAAE,KAAKJ,SAAS,CAAC;MACzE,IAAIE,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAACf,aAAa,EAAE;UAC1Be,OAAO,CAACf,aAAa,GAAG,EAAE;QAC5B;QACAe,OAAO,CAACf,aAAa,CAACO,IAAI,CAAC;UAAEZ,IAAI;UAAEmB;QAAI,CAAC,CAAC;MAC3C;IACF,CAAC;IACDI,QAAQ,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEO,SAAS;QAAEM,KAAK;QAAEC;MAAQ,CAAC,GAAGd,MAAM,CAACE,OAAO;MACpD,IAAI,CAACH,KAAK,CAACH,OAAO,CAACW,SAAS,CAAC,EAAE;QAC7BR,KAAK,CAACH,OAAO,CAACW,SAAS,CAAC,GAAG,EAAE;MAC/B;MACAR,KAAK,CAACH,OAAO,CAACW,SAAS,CAAC,CAACN,IAAI,CAAC;QAAEY,KAAK;QAAEC;MAAQ,CAAC,CAAC;IACnD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXhB,iBAAiB;EACjBK,SAAS;EACTC,iBAAiB;EACjBC,YAAY;EACZC,cAAc;EACdM;AACF,CAAC,GAAGxB,YAAY,CAAC2B,OAAO;AAExB,eAAe3B,YAAY,CAAC4B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}