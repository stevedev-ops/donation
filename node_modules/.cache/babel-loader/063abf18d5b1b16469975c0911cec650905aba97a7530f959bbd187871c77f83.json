{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/phase 5/donate 2/src/components/CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useDispatch } from 'react-redux';\nimport { setDonationHistory } from '../redux/donationSlice'; // Assuming you have an action to set donation history.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = ({\n  donationAmount,\n  campaignTitle,\n  isAnonymous,\n  userName,\n  beneficiaryStories\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setProcessing(true);\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment('your-client-secret-from-backend',\n    // Replace this with your actual backend secret\n    {\n      payment_method: {\n        card: cardElement\n      }\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      const newDonation = {\n        campaignTitle,\n        amount: donationAmount,\n        date: new Date().toISOString(),\n        isAnonymous,\n        userName,\n        beneficiaryStories // Beneficiary stories if any\n      };\n\n      // Save donation history to local storage\n      const donationHistory = JSON.parse(localStorage.getItem('donations')) || [];\n      localStorage.setItem('donations', JSON.stringify([...donationHistory, newDonation]));\n\n      // Dispatch action to update Redux state with the new donation\n      dispatch(setDonationHistory(newDonation));\n      console.log('Payment succeeded!', paymentIntent);\n      setError(null);\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Credit Card Details\", /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || processing,\n      children: processing ? 'Processing...' : `Donate $${donationAmount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"qZ+I5YDjoJRNuVf0JZ+AGhIX38g=\", false, function () {\n  return [useStripe, useElements, useDispatch];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","useDispatch","setDonationHistory","jsxDEV","_jsxDEV","CheckoutForm","donationAmount","campaignTitle","isAnonymous","userName","beneficiaryStories","_s","stripe","elements","dispatch","processing","setProcessing","error","setError","handleSubmit","e","preventDefault","cardElement","getElement","paymentIntent","confirmCardPayment","payment_method","card","message","newDonation","amount","date","Date","toISOString","donationHistory","JSON","parse","localStorage","getItem","setItem","stringify","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/components/CheckoutForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useDispatch } from 'react-redux';\nimport { setDonationHistory } from '../redux/donationSlice'; // Assuming you have an action to set donation history.\n\nconst CheckoutForm = ({ donationAmount, campaignTitle, isAnonymous, userName, beneficiaryStories }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setProcessing(true);\n\n    const cardElement = elements.getElement(CardElement);\n\n    const { error, paymentIntent } = await stripe.confirmCardPayment(\n      'your-client-secret-from-backend', // Replace this with your actual backend secret\n      {\n        payment_method: {\n          card: cardElement,\n        },\n      }\n    );\n\n    if (error) {\n      setError(error.message);\n    } else {\n      const newDonation = {\n        campaignTitle,\n        amount: donationAmount,\n        date: new Date().toISOString(),\n        isAnonymous,\n        userName,\n        beneficiaryStories, // Beneficiary stories if any\n      };\n\n      // Save donation history to local storage\n      const donationHistory = JSON.parse(localStorage.getItem('donations')) || [];\n      localStorage.setItem('donations', JSON.stringify([...donationHistory, newDonation]));\n\n      // Dispatch action to update Redux state with the new donation\n      dispatch(setDonationHistory(newDonation));\n\n      console.log('Payment succeeded!', paymentIntent);\n      setError(null);\n    }\n\n    setProcessing(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Credit Card Details\n        <CardElement />\n      </label>\n      <br />\n      <button type=\"submit\" disabled={!stripe || processing}>\n        {processing ? 'Processing...' : `Donate $${donationAmount}`}\n      </button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}