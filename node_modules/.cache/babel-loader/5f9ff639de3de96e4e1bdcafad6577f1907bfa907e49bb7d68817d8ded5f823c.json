{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/green/medical-reminder-app/src/components/Reminders.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Custom hook to get window width\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useWindowWidth = () => {\n  _s();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowWidth;\n};\n_s(useWindowWidth, \"XPjwYFA2mnyOQTDQkTW889KQ99c=\");\nconst Reminders = () => {\n  _s2();\n  const [reminders, setReminders] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentReminder, setCurrentReminder] = useState({\n    title: '',\n    date: '',\n    time: '',\n    description: ''\n  });\n  const windowWidth = useWindowWidth(); // Get the current window width\n\n  useEffect(() => {\n    // Fetch data from local storage\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n  const handleEditClick = reminder => {\n    setIsEditing(true);\n    setCurrentReminder(reminder);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentReminder({\n      ...currentReminder,\n      [name]: value\n    });\n  };\n  const handleUpdate = e => {\n    e.preventDefault();\n    const updatedReminders = reminders.map(reminder => reminder.title === currentReminder.title ? currentReminder : reminder);\n    setReminders(updatedReminders);\n    localStorage.setItem('reminders', JSON.stringify(updatedReminders));\n    setIsEditing(false);\n    setCurrentReminder({\n      title: '',\n      date: '',\n      time: '',\n      description: ''\n    }); // Reset the form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: windowWidth < 600 ? '1.5em' : '2em'\n      },\n      children: \"Your Medical Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: currentReminder.title,\n          onChange: handleChange,\n          placeholder: \"Title\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: currentReminder.date,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"time\",\n          value: currentReminder.time,\n          onChange: handleChange,\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: currentReminder.description,\n          onChange: handleChange,\n          placeholder: \"Description\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: buttonStyle,\n          children: \"Update Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: reminders.length > 0 ? reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...cardStyle,\n          width: windowWidth < 600 ? '100%' : '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: reminder.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", reminder.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", reminder.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", reminder.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(reminder),\n          style: {\n            ...editButtonStyle,\n            fontSize: windowWidth < 600 ? '1.2em' : '1em'\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No reminders available. Please add one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(Reminders, \"F+W9INYSeKK2/tpfXhLl/bd4Qqk=\", false, function () {\n  return [useWindowWidth];\n});\n_c = Reminders;\nconst cardStyle = {\n  margin: '10px',\n  padding: '15px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  flexGrow: 1\n};\nconst inputStyle = {\n  margin: '10px 0',\n  padding: '10px',\n  width: '100%',\n  boxSizing: 'border-box'\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: 'green',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nconst editButtonStyle = {\n  marginTop: '10px',\n  padding: '5px 10px',\n  backgroundColor: 'orange',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  width: '100%' // Make the button take the full width of the card\n};\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","useWindowWidth","_s","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","Reminders","_s2","reminders","setReminders","isEditing","setIsEditing","currentReminder","setCurrentReminder","title","date","time","description","savedReminders","JSON","parse","localStorage","getItem","handleEditClick","reminder","handleChange","e","name","value","target","handleUpdate","preventDefault","updatedReminders","map","setItem","stringify","style","padding","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","inputStyle","buttonStyle","display","flexWrap","length","index","cardStyle","width","onClick","editButtonStyle","_c","margin","border","borderRadius","flexGrow","boxSizing","backgroundColor","color","cursor","marginTop","$RefreshReg$"],"sources":["/home/steve/Development/code/green/medical-reminder-app/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Custom hook to get window width\nconst useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return windowWidth;\n};\n\nconst Reminders = () => {\n  const [reminders, setReminders] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentReminder, setCurrentReminder] = useState({ title: '', date: '', time: '', description: '' });\n\n  const windowWidth = useWindowWidth(); // Get the current window width\n\n  useEffect(() => {\n    // Fetch data from local storage\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n\n  const handleEditClick = (reminder) => {\n    setIsEditing(true);\n    setCurrentReminder(reminder);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentReminder({ ...currentReminder, [name]: value });\n  };\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    const updatedReminders = reminders.map((reminder) =>\n      reminder.title === currentReminder.title ? currentReminder : reminder\n    );\n    setReminders(updatedReminders);\n    localStorage.setItem('reminders', JSON.stringify(updatedReminders));\n    setIsEditing(false);\n    setCurrentReminder({ title: '', date: '', time: '', description: '' }); // Reset the form\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2 style={{ fontSize: windowWidth < 600 ? '1.5em' : '2em' }}>Your Medical Reminders</h2>\n\n      {isEditing ? (\n        <div>\n          <h3>Edit Reminder</h3>\n          <form onSubmit={handleUpdate}>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={currentReminder.title}\n              onChange={handleChange}\n              placeholder=\"Title\"\n              required\n              style={inputStyle}\n            />\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={currentReminder.date}\n              onChange={handleChange}\n              required\n              style={inputStyle}\n            />\n            <input\n              type=\"time\"\n              name=\"time\"\n              value={currentReminder.time}\n              onChange={handleChange}\n              required\n              style={inputStyle}\n            />\n            <textarea\n              name=\"description\"\n              value={currentReminder.description}\n              onChange={handleChange}\n              placeholder=\"Description\"\n              required\n              style={inputStyle}\n            />\n            <button type=\"submit\" style={buttonStyle}>Update Reminder</button>\n          </form>\n        </div>\n      ) : (\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n          {reminders.length > 0 ? (\n            reminders.map((reminder, index) => (\n              <div key={index} style={{ ...cardStyle, width: windowWidth < 600 ? '100%' : '200px' }}>\n                <h3>{reminder.title}</h3>\n                <p>Date: {reminder.date}</p>\n                <p>Time: {reminder.time}</p>\n                <p>Description: {reminder.description}</p>\n                <button onClick={() => handleEditClick(reminder)} style={{ ...editButtonStyle, fontSize: windowWidth < 600 ? '1.2em' : '1em' }}>\n                  Edit\n                </button>\n              </div>\n            ))\n          ) : (\n            <p>No reminders available. Please add one.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst cardStyle = {\n  margin: '10px',\n  padding: '15px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  flexGrow: 1,\n};\n\nconst inputStyle = {\n  margin: '10px 0',\n  padding: '10px',\n  width: '100%',\n  boxSizing: 'border-box',\n};\n\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: 'green',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nconst editButtonStyle = {\n  marginTop: '10px',\n  padding: '5px 10px',\n  backgroundColor: 'orange',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  width: '100%', // Make the button take the full width of the card\n};\n\nexport default Reminders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}