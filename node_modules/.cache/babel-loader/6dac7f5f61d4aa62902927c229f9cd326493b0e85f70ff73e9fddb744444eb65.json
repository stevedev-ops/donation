{"ast":null,"code":"const charitySlice = createSlice({\n  name: 'charity',\n  initialState: {\n    charities: [],\n    charityApplications: [],\n    // Track charity applications\n    currentUser: null,\n    // Add the currentUser state\n    donors: [],\n    totalDonations: 0,\n    beneficiaries: [],\n    inventory: [],\n    stories: {} // Stories for each charity\n  },\n  reducers: {\n    setCharityApplications: (state, action) => {\n      state.charityApplications = action.payload;\n    },\n    approveCharityApplication: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const application = state.charityApplications.find(app => app.id === id);\n      if (application) {\n        application.status = 'approved';\n        // Add charity to the list of charities upon approval\n        state.charities.push({\n          ...application,\n          status: 'approved'\n        });\n      }\n    },\n    rejectCharityApplication: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const applicationIndex = state.charityApplications.findIndex(app => app.id === id);\n      if (applicationIndex !== -1) {\n        state.charityApplications[applicationIndex].status = 'rejected';\n      }\n    },\n    deleteCharity: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      state.charities = state.charities.filter(charity => charity.id !== id);\n    },\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload; // Store the current logged-in user\n    }\n  }\n});\nexport const {\n  setCharityApplications,\n  approveCharityApplication,\n  rejectCharityApplication,\n  deleteCharity,\n  setCurrentUser\n} = charitySlice.actions;\nexport default charitySlice.reducer;","map":{"version":3,"names":["charitySlice","createSlice","name","initialState","charities","charityApplications","currentUser","donors","totalDonations","beneficiaries","inventory","stories","reducers","setCharityApplications","state","action","payload","approveCharityApplication","id","application","find","app","status","push","rejectCharityApplication","applicationIndex","findIndex","deleteCharity","filter","charity","setCurrentUser","actions","reducer"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/redux/charitySlice.js"],"sourcesContent":["const charitySlice = createSlice({\n  name: 'charity',\n  initialState: {\n    charities: [],\n    charityApplications: [], // Track charity applications\n    currentUser: null, // Add the currentUser state\n    donors: [],\n    totalDonations: 0,\n    beneficiaries: [],\n    inventory: [],\n    stories: {},  // Stories for each charity\n  },\n  reducers: {\n    setCharityApplications: (state, action) => {\n      state.charityApplications = action.payload;\n    },\n    approveCharityApplication: (state, action) => {\n      const { id } = action.payload;\n      const application = state.charityApplications.find(app => app.id === id);\n      if (application) {\n        application.status = 'approved';\n        // Add charity to the list of charities upon approval\n        state.charities.push({ ...application, status: 'approved' });\n      }\n    },\n    rejectCharityApplication: (state, action) => {\n      const { id } = action.payload;\n      const applicationIndex = state.charityApplications.findIndex(app => app.id === id);\n      if (applicationIndex !== -1) {\n        state.charityApplications[applicationIndex].status = 'rejected';\n      }\n    },\n    deleteCharity: (state, action) => {\n      const { id } = action.payload;\n      state.charities = state.charities.filter(charity => charity.id !== id);\n    },\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload; // Store the current logged-in user\n    },\n  },\n});\n\nexport const {\n  setCharityApplications,\n  approveCharityApplication,\n  rejectCharityApplication,\n  deleteCharity,\n  setCurrentUser,\n} = charitySlice.actions;\n\nexport default charitySlice.reducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,WAAW,CAAC;EAC/BC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,mBAAmB,EAAE,EAAE;IAAE;IACzBC,WAAW,EAAE,IAAI;IAAE;IACnBC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,CAAC;IACjBC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,CAAC,CAAC,CAAG;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,sBAAsB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACT,mBAAmB,GAAGU,MAAM,CAACC,OAAO;IAC5C,CAAC;IACDC,yBAAyB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5C,MAAM;QAAEG;MAAG,CAAC,GAAGH,MAAM,CAACC,OAAO;MAC7B,MAAMG,WAAW,GAAGL,KAAK,CAACT,mBAAmB,CAACe,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,EAAE,KAAKA,EAAE,CAAC;MACxE,IAAIC,WAAW,EAAE;QACfA,WAAW,CAACG,MAAM,GAAG,UAAU;QAC/B;QACAR,KAAK,CAACV,SAAS,CAACmB,IAAI,CAAC;UAAE,GAAGJ,WAAW;UAAEG,MAAM,EAAE;QAAW,CAAC,CAAC;MAC9D;IACF,CAAC;IACDE,wBAAwB,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3C,MAAM;QAAEG;MAAG,CAAC,GAAGH,MAAM,CAACC,OAAO;MAC7B,MAAMS,gBAAgB,GAAGX,KAAK,CAACT,mBAAmB,CAACqB,SAAS,CAACL,GAAG,IAAIA,GAAG,CAACH,EAAE,KAAKA,EAAE,CAAC;MAClF,IAAIO,gBAAgB,KAAK,CAAC,CAAC,EAAE;QAC3BX,KAAK,CAACT,mBAAmB,CAACoB,gBAAgB,CAAC,CAACH,MAAM,GAAG,UAAU;MACjE;IACF,CAAC;IACDK,aAAa,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEG;MAAG,CAAC,GAAGH,MAAM,CAACC,OAAO;MAC7BF,KAAK,CAACV,SAAS,GAAGU,KAAK,CAACV,SAAS,CAACwB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACX,EAAE,KAAKA,EAAE,CAAC;IACxE,CAAC;IACDY,cAAc,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO,CAAC,CAAC;IACtC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,sBAAsB;EACtBI,yBAAyB;EACzBO,wBAAwB;EACxBG,aAAa;EACbG;AACF,CAAC,GAAG9B,YAAY,CAAC+B,OAAO;AAExB,eAAe/B,YAAY,CAACgC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}