{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/green/medical-reminder-app/src/components/AddReminder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate replaces useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddReminder = () => {\n  _s();\n  const [reminder, setReminder] = useState({\n    title: '',\n    date: '',\n    time: '',\n    description: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReminder({\n      ...reminder,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Save to local storage\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    localStorage.setItem('reminders', JSON.stringify([...savedReminders, reminder]));\n    navigate('/reminders'); // Redirect after adding\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: reminder.title,\n        onChange: handleChange,\n        placeholder: \"Title\",\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: reminder.date,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: reminder.time,\n        onChange: handleChange,\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: reminder.description,\n        onChange: handleChange,\n        placeholder: \"Description\",\n        required: true,\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        children: \"Add Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AddReminder, \"0i2e1l3qWqtgDIzL0hA8mKDHylE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddReminder;\nconst inputStyle = {\n  margin: '10px 0',\n  padding: '10px',\n  width: '100%',\n  boxSizing: 'border-box'\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: 'green',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nexport default AddReminder;\nvar _c;\n$RefreshReg$(_c, \"AddReminder\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddReminder","_s","reminder","setReminder","title","date","time","description","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","savedReminders","JSON","parse","localStorage","getItem","setItem","stringify","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","inputStyle","buttonStyle","_c","margin","width","boxSizing","backgroundColor","color","border","borderRadius","cursor","$RefreshReg$"],"sources":["/home/steve/Development/code/green/medical-reminder-app/src/components/AddReminder.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate replaces useHistory\n\nconst AddReminder = () => {\n  const [reminder, setReminder] = useState({ title: '', date: '', time: '', description: '' });\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setReminder({ ...reminder, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Save to local storage\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    localStorage.setItem('reminders', JSON.stringify([...savedReminders, reminder]));\n    navigate('/reminders'); // Redirect after adding\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Add a New Reminder</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={reminder.title}\n          onChange={handleChange}\n          placeholder=\"Title\"\n          required\n          style={inputStyle}\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={reminder.date}\n          onChange={handleChange}\n          required\n          style={inputStyle}\n        />\n        <input\n          type=\"time\"\n          name=\"time\"\n          value={reminder.time}\n          onChange={handleChange}\n          required\n          style={inputStyle}\n        />\n        <textarea\n          name=\"description\"\n          value={reminder.description}\n          onChange={handleChange}\n          placeholder=\"Description\"\n          required\n          style={inputStyle}\n        />\n        <button type=\"submit\" style={buttonStyle}>Add Reminder</button>\n      </form>\n    </div>\n  );\n};\n\nconst inputStyle = {\n  margin: '10px 0',\n  padding: '10px',\n  width: '100%',\n  boxSizing: 'border-box'\n};\n\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: 'green',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\n\nexport default AddReminder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}