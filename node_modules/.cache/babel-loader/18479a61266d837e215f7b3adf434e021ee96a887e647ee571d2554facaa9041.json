{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/green/medical-reminder-app/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [reminders, setReminders] = useState([]);\n  useEffect(() => {\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n  const handleDateChange = date => {\n    setDate(date);\n  };\n  const remindersForSelectedDate = reminders.filter(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const hasReminders = reminders.some(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n    return hasReminders ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: styles.dot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Medication Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: date,\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [\"Reminders for \", date.toDateString(), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: styles.line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", remindersForSelectedDate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: remindersForSelectedDate.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '15px',\n          padding: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: '18px'\n          },\n          children: reminder.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 77\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '14px',\n            color: '#555'\n          },\n          children: [\"Time: \", reminder.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '14px',\n            color: '#555'\n          },\n          children: [\"Description: \", reminder.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: 'italic',\n        color: '#777'\n      },\n      children: \"You have no reminders scheduled for this date. Consider adding some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarView, \"XZjTo6anb6WeOz75iTlpSxDdQqo=\");\n_c = CalendarView;\nconst styles = {\n  dot: {\n    display: 'block',\n    width: '6px',\n    height: '6px',\n    backgroundColor: 'red',\n    // Change this to your preferred color\n    borderRadius: '50%',\n    margin: '0 auto' // Center the dot\n  },\n  line: {\n    margin: '10px 0',\n    border: 'none',\n    borderTop: '1px solid #ccc' // Line color\n  }\n};\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","CalendarView","_s","date","setDate","Date","reminders","setReminders","savedReminders","JSON","parse","localStorage","getItem","handleDateChange","remindersForSelectedDate","filter","reminder","toDateString","tileContent","view","hasReminders","some","style","styles","dot","fileName","_jsxFileName","lineNumber","columnNumber","padding","fontFamily","children","onChange","value","marginTop","line","length","listStyleType","map","index","marginBottom","border","borderRadius","backgroundColor","fontSize","title","color","time","description","fontStyle","_c","display","width","height","margin","borderTop","$RefreshReg$"],"sources":["/home/steve/Development/code/green/medical-reminder-app/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarView = () => {\n  const [date, setDate] = useState(new Date());\n  const [reminders, setReminders] = useState([]);\n\n  useEffect(() => {\n    const savedReminders = JSON.parse(localStorage.getItem('reminders')) || [];\n    setReminders(savedReminders);\n  }, []);\n\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  const remindersForSelectedDate = reminders.filter(reminder => \n    new Date(reminder.date).toDateString() === date.toDateString()\n  );\n\n  const tileContent = ({ date, view }) => {\n    const hasReminders = reminders.some(reminder => \n      new Date(reminder.date).toDateString() === date.toDateString()\n    );\n    return hasReminders ? <span style={styles.dot} /> : null;\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      <h2>Your Medication Schedule</h2>\n      <Calendar \n        onChange={handleDateChange} \n        value={date} \n        tileContent={tileContent} \n      />\n      <h3 style={{ marginTop: '20px' }}>Reminders for {date.toDateString()}:</h3>\n      <hr style={styles.line} /> {/* Add line below the date */}\n      {remindersForSelectedDate.length > 0 ? (\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\n          {remindersForSelectedDate.map((reminder, index) => (\n            <li key={index} style={{ marginBottom: '15px', padding: '10px', border: '1px solid #ccc', borderRadius: '5px', backgroundColor: '#f9f9f9' }}>\n              <strong style={{ fontSize: '18px' }}>{reminder.title}</strong><br />\n              <span style={{ fontSize: '14px', color: '#555' }}>Time: {reminder.time}</span><br />\n              <span style={{ fontSize: '14px', color: '#555' }}>Description: {reminder.description}</span>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p style={{ fontStyle: 'italic', color: '#777' }}>You have no reminders scheduled for this date. Consider adding some!</p>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  dot: {\n    display: 'block',\n    width: '6px',\n    height: '6px',\n    backgroundColor: 'red', // Change this to your preferred color\n    borderRadius: '50%',\n    margin: '0 auto', // Center the dot\n  },\n  line: {\n    margin: '10px 0',\n    border: 'none',\n    borderTop: '1px solid #ccc', // Line color\n  },\n};\n\nexport default CalendarView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}