{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/phase 5/donate 2/src/components/CharityDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonors, setTotalDonations, setInventory, addBeneficiary, addStory } from '../redux/charitySlice';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharityDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    charities,\n    donors,\n    totalDonations,\n    beneficiaries,\n    inventory,\n    stories\n  } = useSelector(state => state.charity);\n  const {\n    campaignId\n  } = useParams(); // Assuming you have a campaignId in the route params\n  const selectedCampaign = charities.find(campaign => campaign.id === campaignId);\n  const donationsForCampaign = useSelector(state => state.donation.donationHistory.filter(donation => donation.campaignTitle === (selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.title)));\n  useEffect(() => {\n    // Simulate fetching data from API\n    dispatch(setDonors([{\n      id: 1,\n      name: 'John Doe',\n      amount: 100,\n      anonymous: false\n    }, {\n      id: 2,\n      name: 'Jane Doe',\n      amount: 200,\n      anonymous: true\n    }]));\n    dispatch(setTotalDonations(300));\n    dispatch(setInventory([{\n      id: 1,\n      item: 'Food Packages',\n      quantity: 50\n    }]));\n    dispatch(addBeneficiary({\n      id: 1,\n      name: 'Ben',\n      age: 12\n    }));\n    dispatch(addStory({\n      title: 'Ben Gets a Food Package',\n      content: 'Ben was very happy to receive a food package.'\n    }));\n  }, [dispatch]);\n  const nonAnonymousDonors = donors.filter(donor => !donor.anonymous);\n  const anonymousDonorsAmount = donors.filter(donor => donor.anonymous).reduce((total, donor) => total + donor.amount, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Charity Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedCampaign && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedCampaign.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedCampaign.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount to raise: $\", selectedCampaign.amountToRaise]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Donations for this campaign:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), donationsForCampaign.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: donationsForCampaign.map((donation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [donation.amount, \" donated by \", donation.isAnonymous ? 'Anonymous' : donation.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Story: \", donation.beneficiaryStories ? donation.beneficiaryStories.join(', ') : 'No story provided.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No donations yet for this campaign.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CharityDashboard, \"QvoHIUWf923B5I8M9dZbvddDE1E=\", false, function () {\n  return [useDispatch, useSelector, useParams, useSelector];\n});\n_c = CharityDashboard;\nexport default CharityDashboard;\nvar _c;\n$RefreshReg$(_c, \"CharityDashboard\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setDonors","setTotalDonations","setInventory","addBeneficiary","addStory","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","CharityDashboard","_s","dispatch","charities","donors","totalDonations","beneficiaries","inventory","stories","state","charity","campaignId","selectedCampaign","find","campaign","id","donationsForCampaign","donation","donationHistory","filter","campaignTitle","title","name","amount","anonymous","item","quantity","age","content","nonAnonymousDonors","donor","anonymousDonorsAmount","reduce","total","children","fileName","_jsxFileName","lineNumber","columnNumber","description","amountToRaise","length","map","index","isAnonymous","userName","beneficiaryStories","join","_c","$RefreshReg$"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/components/CharityDashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonors, setTotalDonations, setInventory, addBeneficiary, addStory } from '../redux/charitySlice';\nimport { useParams } from 'react-router-dom';\n\nconst CharityDashboard = () => {\n  const dispatch = useDispatch();\n  const { charities, donors, totalDonations, beneficiaries, inventory, stories } = useSelector(state => state.charity);\n  const { campaignId } = useParams(); // Assuming you have a campaignId in the route params\n  const selectedCampaign = charities.find(campaign => campaign.id === campaignId);\n  const donationsForCampaign = useSelector(state =>\n    state.donation.donationHistory.filter(donation => donation.campaignTitle === selectedCampaign?.title)\n  );\n\n  useEffect(() => {\n    // Simulate fetching data from API\n    dispatch(setDonors([\n      { id: 1, name: 'John Doe', amount: 100, anonymous: false },\n      { id: 2, name: 'Jane Doe', amount: 200, anonymous: true },\n    ]));\n    dispatch(setTotalDonations(300));\n    dispatch(setInventory([{ id: 1, item: 'Food Packages', quantity: 50 }]));\n    dispatch(addBeneficiary({ id: 1, name: 'Ben', age: 12 }));\n    dispatch(addStory({ title: 'Ben Gets a Food Package', content: 'Ben was very happy to receive a food package.' }));\n  }, [dispatch]);\n\n  const nonAnonymousDonors = donors.filter(donor => !donor.anonymous);\n  const anonymousDonorsAmount = donors.filter(donor => donor.anonymous).reduce((total, donor) => total + donor.amount, 0);\n\n  return (\n    <div>\n      <h2>Charity Dashboard</h2>\n      {selectedCampaign && (\n        <>\n          <h3>{selectedCampaign.name}</h3>\n          <p>{selectedCampaign.description}</p>\n          <p>Amount to raise: ${selectedCampaign.amountToRaise}</p>\n          <h4>Donations for this campaign:</h4>\n          {donationsForCampaign.length > 0 ? (\n            <ul>\n              {donationsForCampaign.map((donation, index) => (\n                <li key={index}>\n                  <p>{donation.amount} donated by {donation.isAnonymous ? 'Anonymous' : donation.userName}</p>\n                  <p>Story: {donation.beneficiaryStories ? donation.beneficiaryStories.join(', ') : 'No story provided.'}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No donations yet for this campaign.</p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CharityDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}