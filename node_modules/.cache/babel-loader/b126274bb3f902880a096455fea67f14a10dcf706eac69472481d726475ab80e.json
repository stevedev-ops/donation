{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/phase 5/donate 2/src/components/CharityDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonors, setTotalDonations, setInventory, addBeneficiary, addStory } from '../redux/charitySlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharityDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    charities,\n    donors,\n    totalDonations,\n    beneficiaries,\n    inventory,\n    stories\n  } = useSelector(state => state.charity);\n  const [newStoryTitle, setNewStoryTitle] = useState('');\n  const [newStoryContent, setNewStoryContent] = useState('');\n  const [selectedCharityId, setSelectedCharityId] = useState('');\n  useEffect(() => {\n    // Simulate fetching data from API\n    dispatch(setDonors([{\n      id: 1,\n      name: 'John Doe',\n      amount: 100,\n      anonymous: false\n    }, {\n      id: 2,\n      name: 'Jane Doe',\n      amount: 200,\n      anonymous: true\n    }]));\n    dispatch(setTotalDonations(300));\n    dispatch(setInventory([{\n      id: 1,\n      item: 'Food Packages',\n      quantity: 50\n    }]));\n    dispatch(addBeneficiary({\n      id: 1,\n      name: 'Ben',\n      age: 12\n    }));\n    dispatch(addStory({\n      title: 'Ben Gets a Food Package',\n      content: 'Ben was very happy to receive a food package.'\n    }));\n  }, [dispatch]);\n  const nonAnonymousDonors = donors.filter(donor => !donor.anonymous);\n  const anonymousDonorsAmount = donors.filter(donor => donor.anonymous).reduce((total, donor) => total + donor.amount, 0);\n  const handleAddStory = () => {\n    if (!newStoryTitle || !newStoryContent || !selectedCharityId) {\n      alert('Please fill out all fields: title, content, and select a charity.');\n      return;\n    }\n    dispatch(addStory({\n      charityId: selectedCharityId,\n      title: newStoryTitle,\n      content: newStoryContent\n    }));\n    setNewStoryTitle('');\n    setNewStoryContent('');\n    alert('Story added successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Charity Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Charities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), charities.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: charities.map(charity => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: charity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: charity.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount to raise: $\", charity.amountToRaise]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, charity.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No charities available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Story\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Charity:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedCharityId(e.target.value),\n          value: selectedCharityId,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a charity --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), charities.map(charity => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: charity.id,\n            children: charity.name\n          }, charity.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Story Title\",\n        value: newStoryTitle,\n        onChange: e => setNewStoryTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Story Content\",\n        value: newStoryContent,\n        onChange: e => setNewStoryContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddStory,\n        children: \"Post Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), charities.map(charity => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [charity.name, \" Stories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), stories[charity.id] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stories[charity.id].map((story, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: story.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: story.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No stories for this charity yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, charity.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CharityDashboard, \"cUCZmtdT3BCfbASd2+3c3QyEDoM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CharityDashboard;\nexport default CharityDashboard;\nvar _c;\n$RefreshReg$(_c, \"CharityDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","setDonors","setTotalDonations","setInventory","addBeneficiary","addStory","jsxDEV","_jsxDEV","CharityDashboard","_s","dispatch","charities","donors","totalDonations","beneficiaries","inventory","stories","state","charity","newStoryTitle","setNewStoryTitle","newStoryContent","setNewStoryContent","selectedCharityId","setSelectedCharityId","id","name","amount","anonymous","item","quantity","age","title","content","nonAnonymousDonors","filter","donor","anonymousDonorsAmount","reduce","total","handleAddStory","alert","charityId","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","description","amountToRaise","onChange","e","target","value","type","placeholder","onClick","story","index","_c","$RefreshReg$"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/components/CharityDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonors, setTotalDonations, setInventory, addBeneficiary, addStory } from '../redux/charitySlice';\n\nconst CharityDashboard = () => {\n  const dispatch = useDispatch();\n  const { charities, donors, totalDonations, beneficiaries, inventory, stories } = useSelector(state => state.charity);\n\n  const [newStoryTitle, setNewStoryTitle] = useState('');\n  const [newStoryContent, setNewStoryContent] = useState('');\n  const [selectedCharityId, setSelectedCharityId] = useState('');\n\n  useEffect(() => {\n    // Simulate fetching data from API\n    dispatch(setDonors([\n      { id: 1, name: 'John Doe', amount: 100, anonymous: false },\n      { id: 2, name: 'Jane Doe', amount: 200, anonymous: true },\n    ]));\n    dispatch(setTotalDonations(300));\n    dispatch(setInventory([{ id: 1, item: 'Food Packages', quantity: 50 }]));\n    dispatch(addBeneficiary({ id: 1, name: 'Ben', age: 12 }));\n    dispatch(addStory({ title: 'Ben Gets a Food Package', content: 'Ben was very happy to receive a food package.' }));\n  }, [dispatch]);\n\n  const nonAnonymousDonors = donors.filter(donor => !donor.anonymous);\n  const anonymousDonorsAmount = donors.filter(donor => donor.anonymous).reduce((total, donor) => total + donor.amount, 0);\n\n  const handleAddStory = () => {\n    if (!newStoryTitle || !newStoryContent || !selectedCharityId) {\n      alert('Please fill out all fields: title, content, and select a charity.');\n      return;\n    }\n\n    dispatch(addStory({ charityId: selectedCharityId, title: newStoryTitle, content: newStoryContent }));\n    setNewStoryTitle('');\n    setNewStoryContent('');\n    alert('Story added successfully!');\n  };\n\n  return (\n    <div>\n      <h2>Charity Dashboard</h2>\n\n      <h3>Charities</h3>\n      {charities.length > 0 ? (\n        <ul>\n          {charities.map(charity => (\n            <li key={charity.id}>\n              <h4>{charity.name}</h4>\n              <p>{charity.description}</p>\n              <p>Amount to raise: ${charity.amountToRaise}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No charities available.</p>\n      )}\n\n      {/* Add a section for posting new stories */}\n      <h3>Add a Story</h3>\n      <div>\n        <label>\n          Select Charity:\n          <select onChange={(e) => setSelectedCharityId(e.target.value)} value={selectedCharityId}>\n            <option value=\"\">-- Select a charity --</option>\n            {charities.map(charity => (\n              <option key={charity.id} value={charity.id}>{charity.name}</option>\n            ))}\n          </select>\n        </label>\n\n        <input\n          type=\"text\"\n          placeholder=\"Story Title\"\n          value={newStoryTitle}\n          onChange={(e) => setNewStoryTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Story Content\"\n          value={newStoryContent}\n          onChange={(e) => setNewStoryContent(e.target.value)}\n        />\n        <button onClick={handleAddStory}>Post Story</button>\n      </div>\n\n      {/* Display stories for each charity */}\n      <h3>Stories</h3>\n      {charities.map(charity => (\n        <div key={charity.id}>\n          <h4>{charity.name} Stories</h4>\n          {stories[charity.id] ? (\n            <ul>\n              {stories[charity.id].map((story, index) => (\n                <li key={index}>\n                  <h5>{story.title}</h5>\n                  <p>{story.content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No stories for this charity yet.</p>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CharityDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}