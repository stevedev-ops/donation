{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/phase 5/donate 2/src/redux/donationSlice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonationAmount, setRecurring, setAnonymity, setUserName, addDonation } from '../redux/donationSlice';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport CheckoutForm from './CheckoutForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key-from-stripe');\nconst DonateForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedCampaign = useSelector(state => state.donation.selectedCampaign);\n  const [amount, setAmount] = useState('');\n\n  // Placeholder state for other options\n  const [recurring, setRecurring] = useState(false);\n  const [anonymity, setAnonymity] = useState(true);\n  const [userName, setUserName] = useState('');\n\n  // Handle changes for the various inputs\n  const handleRecurringChange = e => {\n    setRecurring(e.target.checked);\n  };\n  const handleAnonymityChange = e => {\n    setAnonymity(e.target.checked);\n  };\n  const handleNameChange = e => {\n    setUserName(e.target.value);\n  };\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n    dispatch(setDonationAmount(e.target.value));\n  };\n  const handleDonate = async () => {\n    try {\n      // Prepare donation data\n      const donationData = {\n        amount: amount,\n        recurring: recurring,\n        anonymity: anonymity,\n        userName: userName || 'Anonymous',\n        campaignTitle: selectedCampaign ? selectedCampaign.title : 'Unknown Campaign',\n        date: new Date().toISOString(),\n        isAnonymous: anonymity // Store anonymity flag\n      };\n\n      // 1. Add the donation to the Redux state immediately (persist in the store)\n      dispatch(addDonation(donationData));\n\n      // Optionally, save donation to localStorage for persistence across page reloads\n      const donations = JSON.parse(localStorage.getItem('donations')) || [];\n      donations.push(donationData);\n      localStorage.setItem('donations', JSON.stringify(donations));\n\n      // 2. Proceed to handle the payment with Stripe (even if payment fails)\n      // Here, you could integrate the Stripe logic, but the donation history\n      // is saved in Redux and localStorage regardless of payment status.\n      alert('Donation has been recorded. Thank you for your support!');\n\n      // If you need to call an API to log donation in the backend:\n      // await api.submitDonation(donationData);\n    } catch (error) {\n      console.error('Error processing donation:', error);\n      alert('There was an issue processing your donation, but weâ€™ve recorded your donation attempt.');\n    }\n  };\n\n  // Fallback title when selectedCampaign is not available\n  const campaignTitle = selectedCampaign ? selectedCampaign.title : \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Donate to \", campaignTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Donation Amount ($):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: handleAmountChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Recurring Donation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: recurring,\n          onChange: handleRecurringChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Anonymity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: anonymity,\n          onChange: handleAnonymityChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !anonymity && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userName,\n            onChange: handleNameChange,\n            placeholder: \"Enter your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n          donationAmount: amount,\n          userName: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDonate,\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DonateForm, \"/0xYtQCwZd6txr2LoJv5S9S9lgc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DonateForm;\nexport default DonateForm;\nvar _c;\n$RefreshReg$(_c, \"DonateForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setDonationAmount","setRecurring","setAnonymity","setUserName","addDonation","loadStripe","Elements","CheckoutForm","jsxDEV","_jsxDEV","stripePromise","DonateForm","_s","dispatch","selectedCampaign","state","donation","amount","setAmount","recurring","anonymity","userName","handleRecurringChange","e","target","checked","handleAnonymityChange","handleNameChange","value","handleAmountChange","handleDonate","donationData","campaignTitle","title","date","Date","toISOString","isAnonymous","donations","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","type","onChange","required","placeholder","stripe","donationAmount","onClick","_c","$RefreshReg$"],"sources":["/home/steve/Development/code/phase 5/donate 2/src/redux/donationSlice.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDonationAmount, setRecurring, setAnonymity, setUserName, addDonation } from '../redux/donationSlice'; \nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport CheckoutForm from './CheckoutForm';\n\nconst stripePromise = loadStripe('your-publishable-key-from-stripe');\n\nconst DonateForm = () => {\n  const dispatch = useDispatch();\n  const selectedCampaign = useSelector(state => state.donation.selectedCampaign);\n  const [amount, setAmount] = useState('');\n  \n  // Placeholder state for other options\n  const [recurring, setRecurring] = useState(false);\n  const [anonymity, setAnonymity] = useState(true);\n  const [userName, setUserName] = useState('');\n\n  // Handle changes for the various inputs\n  const handleRecurringChange = (e) => { setRecurring(e.target.checked); };\n  const handleAnonymityChange = (e) => { setAnonymity(e.target.checked); };\n  const handleNameChange = (e) => { setUserName(e.target.value); };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n    dispatch(setDonationAmount(e.target.value));\n  };\n\n  const handleDonate = async () => {\n    try {\n      // Prepare donation data\n      const donationData = {\n        amount: amount,\n        recurring: recurring,\n        anonymity: anonymity,\n        userName: userName || 'Anonymous',\n        campaignTitle: selectedCampaign ? selectedCampaign.title : 'Unknown Campaign',\n        date: new Date().toISOString(),\n        isAnonymous: anonymity,  // Store anonymity flag\n      };\n\n      // 1. Add the donation to the Redux state immediately (persist in the store)\n      dispatch(addDonation(donationData));\n\n      // Optionally, save donation to localStorage for persistence across page reloads\n      const donations = JSON.parse(localStorage.getItem('donations')) || [];\n      donations.push(donationData);\n      localStorage.setItem('donations', JSON.stringify(donations));\n\n      // 2. Proceed to handle the payment with Stripe (even if payment fails)\n      // Here, you could integrate the Stripe logic, but the donation history\n      // is saved in Redux and localStorage regardless of payment status.\n      alert('Donation has been recorded. Thank you for your support!');\n\n      // If you need to call an API to log donation in the backend:\n      // await api.submitDonation(donationData);\n\n    } catch (error) {\n      console.error('Error processing donation:', error);\n      alert('There was an issue processing your donation, but weâ€™ve recorded your donation attempt.');\n    }\n  };\n\n  // Fallback title when selectedCampaign is not available\n  const campaignTitle = selectedCampaign ? selectedCampaign.title : \"Loading...\";\n\n  return (\n    <div>\n      <h2>Donate to {campaignTitle}</h2>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <label>\n          Donation Amount ($):\n          <input type=\"number\" value={amount} onChange={handleAmountChange} required />\n        </label>\n        <br />\n        <label>\n          Recurring Donation:\n          <input type=\"checkbox\" checked={recurring} onChange={handleRecurringChange} />\n        </label>\n        <br />\n        <label>\n          Anonymity:\n          <input type=\"checkbox\" checked={anonymity} onChange={handleAnonymityChange} />\n        </label>\n        <br />\n\n        {/* Show the name input field only if anonymity is not checked */}\n        {!anonymity && (\n          <div>\n            <label>\n              Your Name:\n              <input \n                type=\"text\" \n                value={userName} \n                onChange={handleNameChange} \n                placeholder=\"Enter your name\"\n              />\n            </label>\n            <br />\n          </div>\n        )}\n\n        <Elements stripe={stripePromise}>\n          <CheckoutForm donationAmount={amount} userName={userName} />\n        </Elements>\n\n        <button type=\"button\" onClick={handleDonate}>\n          Donate\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default DonateForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,EAAEC,YAAY,EAAEC,YAAY,EAAEC,WAAW,EAAEC,WAAW,QAAQ,wBAAwB;AAChH,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGL,UAAU,CAAC,kCAAkC,CAAC;AAEpE,MAAMM,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,gBAAgB,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACF,gBAAgB,CAAC;EAC9E,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAM,CAACsB,SAAS,EAAElB,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuB,SAAS,EAAElB,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACwB,QAAQ,EAAElB,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMyB,qBAAqB,GAAIC,CAAC,IAAK;IAAEtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAAE,CAAC;EACxE,MAAMC,qBAAqB,GAAIH,CAAC,IAAK;IAAErB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAAE,CAAC;EACxE,MAAME,gBAAgB,GAAIJ,CAAC,IAAK;IAAEpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC;EAAE,CAAC;EAEhE,MAAMC,kBAAkB,GAAIN,CAAC,IAAK;IAChCL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC;IACzBf,QAAQ,CAACb,iBAAiB,CAACuB,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,YAAY,GAAG;QACnBd,MAAM,EAAEA,MAAM;QACdE,SAAS,EAAEA,SAAS;QACpBC,SAAS,EAAEA,SAAS;QACpBC,QAAQ,EAAEA,QAAQ,IAAI,WAAW;QACjCW,aAAa,EAAElB,gBAAgB,GAAGA,gBAAgB,CAACmB,KAAK,GAAG,kBAAkB;QAC7EC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC9BC,WAAW,EAAEjB,SAAS,CAAG;MAC3B,CAAC;;MAED;MACAP,QAAQ,CAACT,WAAW,CAAC2B,YAAY,CAAC,CAAC;;MAEnC;MACA,MAAMO,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;MACrEJ,SAAS,CAACK,IAAI,CAACZ,YAAY,CAAC;MAC5BU,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACM,SAAS,CAACP,SAAS,CAAC,CAAC;;MAE5D;MACA;MACA;MACAQ,KAAK,CAAC,yDAAyD,CAAC;;MAEhE;MACA;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDD,KAAK,CAAC,wFAAwF,CAAC;IACjG;EACF,CAAC;;EAED;EACA,MAAMd,aAAa,GAAGlB,gBAAgB,GAAGA,gBAAgB,CAACmB,KAAK,GAAG,YAAY;EAE9E,oBACExB,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAAwC,QAAA,GAAI,YAAU,EAACjB,aAAa;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClC5C,OAAA;MAAM6C,QAAQ,EAAG/B,CAAC,IAAKA,CAAC,CAACgC,cAAc,CAAC,CAAE;MAAAN,QAAA,gBACxCxC,OAAA;QAAAwC,QAAA,GAAO,sBAEL,eAAAxC,OAAA;UAAO+C,IAAI,EAAC,QAAQ;UAAC5B,KAAK,EAAEX,MAAO;UAACwC,QAAQ,EAAE5B,kBAAmB;UAAC6B,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACR5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5C,OAAA;QAAAwC,QAAA,GAAO,qBAEL,eAAAxC,OAAA;UAAO+C,IAAI,EAAC,UAAU;UAAC/B,OAAO,EAAEN,SAAU;UAACsC,QAAQ,EAAEnC;QAAsB;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACR5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5C,OAAA;QAAAwC,QAAA,GAAO,YAEL,eAAAxC,OAAA;UAAO+C,IAAI,EAAC,UAAU;UAAC/B,OAAO,EAAEL,SAAU;UAACqC,QAAQ,EAAE/B;QAAsB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACR5C,OAAA;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAGL,CAACjC,SAAS,iBACTX,OAAA;QAAAwC,QAAA,gBACExC,OAAA;UAAAwC,QAAA,GAAO,YAEL,eAAAxC,OAAA;YACE+C,IAAI,EAAC,MAAM;YACX5B,KAAK,EAAEP,QAAS;YAChBoC,QAAQ,EAAE9B,gBAAiB;YAC3BgC,WAAW,EAAC;UAAiB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR5C,OAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED5C,OAAA,CAACH,QAAQ;QAACsD,MAAM,EAAElD,aAAc;QAAAuC,QAAA,eAC9BxC,OAAA,CAACF,YAAY;UAACsD,cAAc,EAAE5C,MAAO;UAACI,QAAQ,EAAEA;QAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAEX5C,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEhC,YAAa;QAAAmB,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzC,EAAA,CAxGID,UAAU;EAAA,QACGb,WAAW,EACHC,WAAW;AAAA;AAAAgE,EAAA,GAFhCpD,UAAU;AA0GhB,eAAeA,UAAU;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}